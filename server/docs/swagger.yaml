definitions:
  request.InitDB:
    properties:
      dbName:
        description: 数据库名
        type: string
      dbPath:
        description: sqlite数据库文件路径
        type: string
      dbType:
        description: 数据库类型
        type: string
      host:
        description: 服务器地址
        type: string
      password:
        description: 数据库密码
        type: string
      port:
        description: 数据库连接端口
        type: string
      userName:
        description: 数据库用户名
        type: string
    required:
    - dbName
    type: object
  request.Login:
    properties:
      captcha:
        description: 验证码
        type: string
      captchaId:
        description: 验证码ID
        type: string
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    type: object
  response.LoginResponse:
    properties:
      expiresAt:
        type: integer
      token:
        type: string
      user:
        $ref: '#/definitions/system.SysUser'
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  response.SysCaptchaResponse:
    properties:
      captchaId:
        type: string
      captchaLength:
        type: integer
      openCaptcha:
        type: boolean
      picPath:
        type: string
    type: object
  system.Meta:
    properties:
      activeName:
        type: string
      closeTab:
        description: 自动关闭tab
        type: boolean
      defaultMenu:
        description: 是否是基础路由（开发中）
        type: boolean
      icon:
        description: 菜单图标
        type: string
      keepAlive:
        description: 是否缓存
        type: boolean
      title:
        description: 菜单名
        type: string
    type: object
  system.SysAuthority:
    properties:
      authorityId:
        description: 角色ID
        type: integer
      authorityName:
        description: 角色名
        type: string
      children:
        description: 子角色
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      createdAt:
        description: 创建时间
        type: string
      dataAuthorityId:
        description: 数据权限ID
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      defaultRouter:
        description: 默认菜单(默认dashboard)
        type: string
      deletedAt:
        type: string
      menus:
        description: 角色菜单
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
      parentId:
        description: 父角色ID
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysBaseMenu:
    properties:
      authoritys:
        description: 角色菜单关联
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      children:
        description: 子菜单
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
      component:
        description: 对应前端文件路径
        type: string
      createdAt:
        type: string
      hidden:
        description: 是否在列表隐藏
        type: boolean
      id:
        description: struct tag，告诉 Gorm 这个字段是数据库表的主键，告诉 JSON 包在序列化和反序列化时，这个字段的名称应该是
          id
        type: integer
      menuBtn:
        description: 基础菜单按钮
        items:
          $ref: '#/definitions/system.SysBaseMenuBtn'
        type: array
      meta:
        allOf:
        - $ref: '#/definitions/system.Meta'
        description: 附加属性
      name:
        description: 路由name
        type: string
      parameters:
        description: 路由参数
        items:
          $ref: '#/definitions/system.SysBaseMenuParameter'
        type: array
      parentId:
        description: 父菜单ID
        type: string
      path:
        description: 路由path
        type: string
      sort:
        description: 排序标记
        type: integer
      updatedAt:
        type: string
    type: object
  system.SysBaseMenuBtn:
    properties:
      createdAt:
        type: string
      desc:
        type: string
      id:
        description: struct tag，告诉 Gorm 这个字段是数据库表的主键，告诉 JSON 包在序列化和反序列化时，这个字段的名称应该是
          id
        type: integer
      name:
        type: string
      sysBaseMenuID:
        type: integer
      updatedAt:
        type: string
    type: object
  system.SysBaseMenuParameter:
    properties:
      createdAt:
        type: string
      id:
        description: struct tag，告诉 Gorm 这个字段是数据库表的主键，告诉 JSON 包在序列化和反序列化时，这个字段的名称应该是
          id
        type: integer
      key:
        description: 地址栏携带参数的key
        type: string
      sysBaseMenuID:
        type: integer
      type:
        description: 地址栏携带参数为params还是query
        type: string
      updatedAt:
        type: string
      value:
        description: 地址栏携带参数的值
        type: string
    type: object
  system.SysUser:
    properties:
      activeColor:
        description: 活跃颜色
        type: string
      authorities:
        description: 角色组
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      authority:
        allOf:
        - $ref: '#/definitions/system.SysAuthority'
        description: 外键，关联角色表
      authorityId:
        description: 用户角色ID
        type: integer
      baseColor:
        description: 基础颜色
        type: string
      createdAt:
        type: string
      email:
        description: 用户邮箱
        type: string
      enable:
        description: 用户是否被冻结 1正常 2冻结
        type: integer
      headerImg:
        description: 用户头像，TODO：头像默认上传
        type: string
      id:
        description: struct tag，告诉 Gorm 这个字段是数据库表的主键，告诉 JSON 包在序列化和反序列化时，这个字段的名称应该是
          id
        type: integer
      nickName:
        description: 用户昵称
        type: string
      phone:
        description: 用户手机号
        type: string
      sideMode:
        description: 用户侧边主题
        type: string
      updatedAt:
        type: string
      userName:
        description: 用户登录名
        type: string
      uuid:
        description: 在外部（如URL中）使用UUID来标识用户，以避免暴露用户的内部ID                                      //用户唯一id
          主键                                          // 用户UUID
        type: string
    type: object
info:
  contact: {}
paths:
  /base/captcha:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 生成验证码,返回包括随机数id,base64,验证码长度,是否开启验证码
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysCaptchaResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 生成验证码
      tags:
      - Base
  /base/login:
    post:
      parameters:
      - description: 用户名, 密码, 验证码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      produces:
      - application/json
      responses:
        "200":
          description: 返回包括用户信息,token,过期时间
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.LoginResponse'
                msg:
                  type: string
              type: object
      summary: 用户登录
      tags:
      - Base
  /init/checkdb:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: 初始化用户数据库
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      summary: 初始化用户数据库
      tags:
      - CheckDB
  /init/initdb:
    post:
      parameters:
      - description: 初始化数据库参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.InitDB'
      produces:
      - application/json
      responses:
        "200":
          description: 初始化用户数据库
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 初始化用户数据库
      tags:
      - InitDB
swagger: "2.0"
